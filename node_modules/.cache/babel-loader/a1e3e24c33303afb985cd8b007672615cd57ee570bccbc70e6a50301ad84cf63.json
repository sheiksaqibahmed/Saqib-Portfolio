{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\project\\\\Portfo\\\\personal-portfolio\\\\src\\\\components\\\\Projects.tsx\";\nimport React from 'react';\nimport './Projects.css'; // Custom CSS file (create it)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  const projectList = [{\n    title: 'Trading Analysis Website',\n    description: 'A full-stack mobile/web trading prediction app that uses chart pattern recognition, scalping strategies, and machine learning-based price forecasting to assist traders in making smarter decisions.',\n    github: 'https://github.com/sheiksaqibahmed/Trading-Analyzer-Website.git',\n    technologies: ['React', 'Node.js', 'MongoDB']\n  }, {\n    title: 'Cyber Attack Detection for Wireless Sensors in Microgrids (IoT)',\n    description: 'Model for identifying and responding to malicious activities targeting wireless sensor networks that monitor and control microgrid operations and data tampering to ensure the security, reliability, and efficiency.',\n    role: 'Academic Project',\n    technologies: ['Anaconda', 'Spyder', 'TensorFlow', 'Python', 'Keras', 'Matplotlib', 'NumPy', 'Pandas', 'Scikit-learn']\n  }, {\n    title: 'Small Language Model (NLP)',\n    description: 'Fully Python program leveraging NLP to comprehend, retrieve, and generate responses from various file formats such as .txt, .pdf, and .docx.',\n    github: 'https://github.com/sheiksaqibahmed/SLM_PROJECT.git',\n    technologies: ['Python', 'NLP', 'Transformers']\n  }, {\n    title: 'Automatic Street Light Sensor System',\n    description: 'This system uses LDR and microcontrollers to automatically control street lights based on ambient light levels, improving energy efficiency and supporting smart city initiatives.',\n    role: 'Academic Project',\n    technologies: ['Arduino', 'LDR', 'Microcontrollers', 'Sensors']\n  }];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"projects-heading\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-grid\",\n      children: projectList.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), project.role && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 32\n          }, this), \" \", project.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Technologies:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 28\n          }, this), \" \", project.technologies.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), project.github && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: project.github,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"github-link\",\n            children: \"GitHub Repository\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Projects","projectList","title","description","github","technologies","role","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","join","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/project/Portfo/personal-portfolio/src/components/Projects.tsx"],"sourcesContent":["import React from 'react';\nimport './Projects.css'; // Custom CSS file (create it)\n\nconst Projects: React.FC = () => {\n    const projectList = [\n        {\n            title: 'Trading Analysis Website',\n            description: 'A full-stack mobile/web trading prediction app that uses chart pattern recognition, scalping strategies, and machine learning-based price forecasting to assist traders in making smarter decisions.',\n            github: 'https://github.com/sheiksaqibahmed/Trading-Analyzer-Website.git',\n            technologies: ['React', 'Node.js', 'MongoDB'],\n        },\n        {\n            title: 'Cyber Attack Detection for Wireless Sensors in Microgrids (IoT)',\n            description: 'Model for identifying and responding to malicious activities targeting wireless sensor networks that monitor and control microgrid operations and data tampering to ensure the security, reliability, and efficiency.',\n            role: 'Academic Project',\n            technologies: ['Anaconda', 'Spyder', 'TensorFlow', 'Python', 'Keras', 'Matplotlib', 'NumPy', 'Pandas', 'Scikit-learn'],\n        },\n        {\n            title: 'Small Language Model (NLP)',\n            description: 'Fully Python program leveraging NLP to comprehend, retrieve, and generate responses from various file formats such as .txt, .pdf, and .docx.',\n            github: 'https://github.com/sheiksaqibahmed/SLM_PROJECT.git',\n            technologies: ['Python', 'NLP', 'Transformers'],\n        },\n        {\n            title: 'Automatic Street Light Sensor System',\n            description: 'This system uses LDR and microcontrollers to automatically control street lights based on ambient light levels, improving energy efficiency and supporting smart city initiatives.',\n            role: 'Academic Project',\n            technologies: ['Arduino', 'LDR', 'Microcontrollers', 'Sensors'],\n        },\n    ];\n\n    return (\n        <section id=\"projects\">\n            <h2 className=\"projects-heading\">Projects</h2>\n            <div className=\"project-grid\">\n                {projectList.map((project, index) => (\n                    <div key={index} className=\"project-card\">\n                        <h3>{project.title}</h3>\n                        <p>{project.description}</p>\n                        {project.role && (\n                            <p><strong>Role:</strong> {project.role}</p>\n                        )}\n                        <p><strong>Technologies:</strong> {project.technologies.join(', ')}</p>\n                        {project.github && (\n                            <p>\n                                <a\n                                    href={project.github}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    className=\"github-link\"\n                                >\n                                    GitHub Repository\n                                </a>\n                            </p>\n                        )}\n                    </div>\n                ))}\n            </div>\n        </section>\n    );\n};\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}